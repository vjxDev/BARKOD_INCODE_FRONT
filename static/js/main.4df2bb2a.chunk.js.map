{"version":3,"sources":["util.js","components/Juce.js","pages/HomePage.js","App.js","index.js"],"names":["getYesterday","dateOnly","d","Date","setDate","getDate","toDateString","Kodovi","KodUString","RSD","EUR","USD","JPY","SVGComp","children","fill","xmlns","height","viewBox","width","gore","Juce","useState","niz","setNiz","useEffect","console","log","uporediSaJuce","a","t","kod","axios","get","danas","juceDatum","toISOString","slice","juce","danasValuta","data","juceValuta","ista","boja","procenat","push","className","toFixed","Opcije","oznaka","Object","hasOwnProperty","call","element","value","HomePage","konIz","setKonIz","konU","setKonU","kolicina","setKolicina","rezultat","setRezultat","vremeKonverzije","setVremeKonverzije","rotiraj","u","temo","pozoviServer","time","Promise","resolve","setTimeout","rez","type","onChange","e","target","placeholder","novoIz","onClick","novoU","getMilliseconds","App","path","defaults","baseURL","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4df2bb2a.chunk.js","sourcesContent":["export const getYesterday = (dateOnly = false) => {\r\n  let d = new Date();\r\n  d.setDate(d.getDate() - 1);\r\n  return dateOnly ? new Date(d.toDateString()) : d;\r\n};\r\n\r\nexport const Kodovi = [\"RSD\", \"EUR\", \"USD\", \"JPY\"];\r\n\r\nexport const KodUString = {\r\n  RSD: [\"Srpski dinar\", \"Srpskih dinara\"],\r\n  EUR: [\"Evro\", \"Evra\"],\r\n  USD: [\"Dolar\", \"Dolara\"],\r\n  JPY: [\"Japanski jen\", \"Japanskih jena\"],\r\n};\r\n","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getYesterday, Kodovi } from \"../util\";\r\n\r\nconst SVGComp = ({ children, fill }) => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill={fill}\r\n  >\r\n    {children}\r\n  </svg>\r\n);\r\nconst gore = (\r\n  <path\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    d=\"M16 6l2.29 2.29-4.88 4.88-4-4L2 16.59 3.41 18l6-6 4 4 6.3-6.29L22 12V6h-6z\"\r\n  />\r\n);\r\nconst dore = (\r\n  <path\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    d=\"M16 18l2.29-2.29-4.88-4.88-4 4L2 7.41 3.41 6l6 6 4-4 6.3 6.29L22 12v6h-6z\"\r\n  />\r\n);\r\n\r\nfunction Juce() {\r\n  const [niz, setNiz] = useState([]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Alo\");\r\n    uporediSaJuce();\r\n  }, []);\r\n\r\n  const uporediSaJuce = async () => {\r\n    let t = [];\r\n    for (const kod of Kodovi) {\r\n      if (kod === \"RSD\") continue;\r\n      const danas = await axios.get(`conversion?from=RSD&to=${kod}&amount=1`);\r\n\r\n      const juceDatum = getYesterday(true).toISOString().slice(0, 10);\r\n\r\n      const juce = await axios.get(\r\n        `conversion?from=RSD&to=${kod}&amount=1&date=${juceDatum}`\r\n      );\r\n\r\n      const danasValuta = danas.data[\"result\"];\r\n      const juceValuta = juce.data[\"result\"];\r\n\r\n      const rast = danasValuta > juceValuta;\r\n      const ista = danasValuta == juceValuta;\r\n\r\n      const boja = rast\r\n        ? \"text-green-700\"\r\n        : ista\r\n        ? \"text-gray-700\"\r\n        : \"text-red-700\";\r\n      const procenat = (danasValuta / juceValuta) * 100 - 100;\r\n\r\n      t.push(\r\n        <>\r\n          <div className={`${boja}`}>\r\n            <span>\r\n              <SVGComp> {gore}</SVGComp>\r\n            </span>\r\n            |\r\n            <div>\r\n              <span>{procenat.toFixed(3)}% </span>\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n    setNiz(t);\r\n  };\r\n  return niz;\r\n}\r\n\r\nexport default Juce;\r\n","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Juce from \"../components/Juce\";\r\nimport { KodUString } from \"../util\";\r\n\r\nconst Opcije = () => {\r\n  let niz = [];\r\n\r\n  for (const oznaka in KodUString) {\r\n    if (Object.hasOwnProperty.call(KodUString, oznaka)) {\r\n      const element = KodUString[oznaka];\r\n      niz.push(\r\n        <>\r\n          <option value={oznaka}>\r\n            {oznaka} - {element[0]}\r\n          </option>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n  return niz;\r\n};\r\n\r\nfunction HomePage() {\r\n  const [konIz, setKonIz] = useState(\"EUR\");\r\n  const [konU, setKonU] = useState(\"RSD\");\r\n  const [kolicina, setKolicina] = useState(1);\r\n\r\n  const [rezultat, setRezultat] = useState(\"\");\r\n\r\n  const [vremeKonverzije, setVremeKonverzije] = useState();\r\n\r\n  const podesiIzU = (iz, u) => {\r\n    setKonIz(iz);\r\n    setKonU(u);\r\n  };\r\n\r\n  const rotiraj = () => {\r\n    podesiIzU(konU, konIz);\r\n    const temo = kolicina;\r\n    setKolicina(rezultat);\r\n    setRezultat(temo);\r\n  };\r\n\r\n  useEffect(() => {\r\n    pozoviServer();\r\n  }, [konIz, konU]);\r\n\r\n  const pozoviServer = async (time) => {\r\n    if (time) await new Promise((resolve) => setTimeout(resolve, time));\r\n\r\n    const rez = await axios.get(\r\n      `conversion?from=${konIz}&to=${konU}&amount=${kolicina}`\r\n    );\r\n    setRezultat(rez.data[\"result\"].toFixed(2));\r\n    console.log(rez.data);\r\n    setVremeKonverzije(new Date(rez.data[\"info\"][\"timestamp\"] * 1000));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container grid mx-auto gap-8 relative p-10 sm:p-60 sm:mt-10 main-container\">\r\n      <div className=\"bg-primery absolute h-[20wh] w-screen\"></div>\r\n      <div className=\"grid p-8 gap-8 bg-white border-primery border-2 rounded-xl\">\r\n        {/* Konverzija */}\r\n        <div className=\"flex flex-col sm:flex-row gap-4 w-full items-end \">\r\n          <label className=\" input-text\">\r\n            <span className=\"text-gray-700\">Koliƒçina:</span>\r\n            <input\r\n              type=\"text\"\r\n              value={kolicina}\r\n              onChange={(e) => {\r\n                setKolicina(e.target.value);\r\n              }}\r\n              className=\"form-input mt-1 block w-full\"\r\n              placeholder=\"1.00\"\r\n            />\r\n          </label>\r\n          <label className=\" input-text\">\r\n            <span className=\"text-gray-700\">Konverzija iz:</span>\r\n            <select\r\n              className=\"form-select mt-1 block w-full\"\r\n              value={konIz}\r\n              onChange={(e) => {\r\n                const novoIz = e.target.value;\r\n                if (novoIz === konU) {\r\n                  rotiraj();\r\n                } else {\r\n                  setKonIz(novoIz);\r\n                }\r\n              }}\r\n            >\r\n              <Opcije />\r\n            </select>\r\n          </label>\r\n          <button\r\n            onClick={rotiraj}\r\n            className=\"grid items-center justify-center h-12 w-full sm:w-auto rounded-full  bg-primery text-white \"\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"w-8 h-8 mx-2\"\r\n              viewBox=\"0 0 24 24\"\r\n              fill=\"white\"\r\n            >\r\n              <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n              <path d=\"M6.99 11L3 15l3.99 4v-3H14v-2H6.99v-3zM21 9l-3.99-4v3H10v2h7.01v3L21 9z\" />\r\n            </svg>\r\n          </button>\r\n          <label className=\" input-text\">\r\n            <span className=\"text-gray-700\">Konverzija u:</span>\r\n            <select\r\n              className=\"form-select mt-1 block w-full\"\r\n              value={konU}\r\n              onChange={(e) => {\r\n                const novoU = e.target.value;\r\n                if (novoU === konIz) {\r\n                  rotiraj();\r\n                } else {\r\n                  setKonU(novoU);\r\n                }\r\n              }}\r\n            >\r\n              <Opcije />\r\n            </select>\r\n          </label>\r\n        </div>\r\n        {/* Rzultat */}\r\n\r\n        <div className=\"flex gap-4 flex-col-reverse sm:flex-row justify-between sm:items-end  \">\r\n          <div className=\"grid gap-1\">\r\n            <span className=\"text-lg\">\r\n              {kolicina} {KodUString[konIz][0]} = <br />\r\n            </span>\r\n            <span className=\" text-4xl text-primery font-semibold\">\r\n              {!rezultat && \"...\"} {rezultat} {KodUString[konU][1]}\r\n            </span>\r\n            <span className=\"text-gray-500\">\r\n              {vremeKonverzije != null && (\r\n                <>Vreme konverzije: {vremeKonverzije.getMilliseconds()}</>\r\n              )}\r\n            </span>\r\n          </div>\r\n          <button className=\"btn\" onClick={pozoviServer}>\r\n            Izvr≈°i konverzija\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"grid p-8 gap-8 bg-white border-primery border-2 rounded-xl\">\r\n        <Juce />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import { Switch, Route } from \"react-router-dom\";\r\nimport HomePage from \"./pages/HomePage\";\r\nfunction App() {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\">\r\n        <HomePage />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.scss\";\r\n\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://barkod-incode-back.herokuapp.com/api\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}