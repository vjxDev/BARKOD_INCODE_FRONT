{"version":3,"sources":["util.js","components/TrenurneKvore.js","pages/HomePage.js","App.js","index.js"],"names":["getYesterday","dateOnly","d","Date","setDate","getDate","toDateString","Kodovi","KodUString","RSD","EUR","USD","JPY","Ikone","SVGComp","children","fill","className","xmlns","height","viewBox","width","gore","dole","srednje","TrenurneKvore","useState","niz","setNiz","useEffect","console","log","jednom","a","t","kod","axios","get","danas","danasValuta","data","juceDatum","toISOString","slice","juce","juceValuta","ista","b","ikonica","index","push","src","alt","toFixed","Opcije","oznaka","Object","hasOwnProperty","call","element","value","HomePage","konIz","setKonIz","konU","setKonU","kolicina","setKolicina","datum","setDatum","rezultat","setRezultat","vremeKonverzije","setVremeKonverzije","rotiraj","u","temo","pozoviServer","rez","type","onChange","e","target","placeholder","novoIz","onClick","novoU","App","path","defaults","baseURL","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aea016d8.chunk.js","sourcesContent":["export const getYesterday = (dateOnly = false) => {\r\n  let d = new Date();\r\n  d.setDate(d.getDate() - 1);\r\n  return dateOnly ? new Date(d.toDateString()) : d;\r\n};\r\n\r\nexport const Kodovi = [\"RSD\", \"EUR\", \"USD\", \"JPY\"];\r\n\r\nexport const KodUString = {\r\n  RSD: [\"Srpski dinar\", \"Srpskih dinara\"],\r\n  EUR: [\"Evro\", \"Evra\"],\r\n  USD: [\"Dolar\", \"Dolara\"],\r\n  JPY: [\"Japanski jen\", \"Japanskih jena\"],\r\n};\r\n\r\nexport const Ikone = {\r\n  RSD: \"rs.svg\",\r\n  EUR: \"eu.svg\",\r\n  USD: \"us.svg\",\r\n  JPY: \"jp.svg\",\r\n};\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { getYesterday, Ikone, Kodovi } from \"../util\";\r\n\r\nconst SVGComp = ({ children, fill, className }) => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill={fill}\r\n    className={className}\r\n  >\r\n    {children}\r\n  </svg>\r\n);\r\nconst gore = (\r\n  <path\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    d=\"M16 6l2.29 2.29-4.88 4.88-4-4L2 16.59 3.41 18l6-6 4 4 6.3-6.29L22 12V6h-6z\"\r\n  />\r\n);\r\nconst dole = (\r\n  <path\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    d=\"M16 18l2.29-2.29-4.88-4.88-4 4L2 7.41 3.41 6l6 6 4-4 6.3 6.29L22 12v6h-6z\"\r\n  />\r\n);\r\nconst srednje = (\r\n  <path xmlns=\"http://www.w3.org/2000/svg\" d=\"M22 12l-4-4v3H3v2h15v3l4-4z\" />\r\n);\r\nfunction TrenurneKvore() {\r\n  const [niz, setNiz] = useState([]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Alo\");\r\n    jednom();\r\n  }, []);\r\n\r\n  const jednom = async () => {\r\n    let t = [];\r\n    for (const kod of Kodovi) {\r\n      if (kod === \"RSD\") continue;\r\n      const danas = await axios.get(`conversion?from=${kod}&to=RSD&amount=1`);\r\n      const danasValuta = danas.data[\"result\"];\r\n\r\n      const juceDatum = getYesterday(true).toISOString().slice(0, 10);\r\n\r\n      const juce = await axios.get(\r\n        `conversion?from=RSD&to=${kod}&amount=1&date=${juceDatum}`\r\n      );\r\n      const juceValuta = juce.data[\"result\"];\r\n\r\n      const rast = danasValuta > juceValuta;\r\n      const ista = danasValuta == juceValuta;\r\n      const boja = [\"text-green-700\", \"text-gray-700\", \"text-red-700\"];\r\n      const b = [\"green\", \"gray\", \"red\"];\r\n      const ikonica = [gore, srednje, dole];\r\n\r\n      const index = rast ? 0 : ista ? 1 : 2;\r\n\r\n      t.push(\r\n        <div className=\"flex p-4 bg-white border-primery border-2 rounded-xl items-center justify-between\">\r\n          <div className=\"shadow-lg\">\r\n            <img src={Ikone[kod]} alt=\"\" className=\"w-8 h-8 \" />\r\n          </div>\r\n          <span>\r\n            1 <b>{kod}</b> = {danasValuta.toFixed(2)} <b>RSD</b>\r\n          </span>\r\n          <div>\r\n            <SVGComp className=\" w-12 h-12\" fill={b[index]}>\r\n              {ikonica[index]}\r\n            </SVGComp>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    setNiz(t);\r\n  };\r\n  return niz;\r\n}\r\n\r\nexport default TrenurneKvore;\r\n","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport TrenurneKvore from \"../components/TrenurneKvore\";\r\nimport { KodUString } from \"../util\";\r\n\r\nconst Opcije = () => {\r\n  let niz = [];\r\n\r\n  for (const oznaka in KodUString) {\r\n    if (Object.hasOwnProperty.call(KodUString, oznaka)) {\r\n      const element = KodUString[oznaka];\r\n      niz.push(\r\n        <>\r\n          <option value={oznaka}>\r\n            {oznaka} - {element[0]}\r\n          </option>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n  return niz;\r\n};\r\n\r\nfunction HomePage() {\r\n  const [konIz, setKonIz] = useState(\"EUR\");\r\n  const [konU, setKonU] = useState(\"RSD\");\r\n  const [kolicina, setKolicina] = useState(1);\r\n  const [datum, setDatum] = useState();\r\n\r\n  const [rezultat, setRezultat] = useState(\"\");\r\n\r\n  const [vremeKonverzije, setVremeKonverzije] = useState();\r\n\r\n  const podesiIzU = (iz, u) => {\r\n    setKonIz(iz);\r\n    setKonU(u);\r\n  };\r\n\r\n  const rotiraj = () => {\r\n    podesiIzU(konU, konIz);\r\n    const temo = kolicina;\r\n    setKolicina(rezultat);\r\n    setRezultat(temo);\r\n  };\r\n\r\n  useEffect(() => {\r\n    pozoviServer();\r\n  }, [konIz, konU, datum]);\r\n\r\n  const pozoviServer = async () => {\r\n    let d = \"\";\r\n    if (datum) {\r\n      d = \"&date=\" + new Date(datum).toISOString().slice(0, 10);\r\n      console.log(d);\r\n    }\r\n    const rez = await axios.get(\r\n      `conversion?from=${konIz}&to=${konU}&amount=1${d}`\r\n    );\r\n    setRezultat(rez.data[\"result\"] * kolicina);\r\n    setVremeKonverzije(new Date(rez.data[\"info\"][\"timestamp\"] * 1000));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container grid mx-auto gap-8 relative p-10 sm:px-60 main-container\">\r\n      <h1 className=\"webpage-title text-center text-white\">BARKOD EXCHANGE</h1>\r\n\r\n      <div className=\"grid p-8 gap-8 bg-white border-primery border-2 rounded-xl\">\r\n        {/* Konverzija */}\r\n        <div className=\"flex flex-col sm:flex-row gap-4 w-full items-end \">\r\n          <label className=\" input-text\">\r\n            <span className=\"text-gray-700\">Količina:</span>\r\n            <input\r\n              type=\"text\"\r\n              value={kolicina}\r\n              onChange={(e) => {\r\n                const data = e.target.value;\r\n                setKolicina(data);\r\n              }}\r\n              className=\"form-input mt-1 block w-full\"\r\n              placeholder=\"1.00\"\r\n            />\r\n          </label>\r\n          <label className=\" input-text\">\r\n            <span className=\"text-gray-700\">Konverzija iz:</span>\r\n            <select\r\n              className=\"form-select mt-1 block w-full\"\r\n              value={konIz}\r\n              onChange={(e) => {\r\n                const novoIz = e.target.value;\r\n                if (novoIz === konU) {\r\n                  rotiraj();\r\n                } else {\r\n                  setKonIz(novoIz);\r\n                }\r\n              }}\r\n            >\r\n              <Opcije />\r\n            </select>\r\n          </label>\r\n          <button\r\n            onClick={rotiraj}\r\n            className=\"grid items-center justify-center h-12 w-full sm:w-auto rounded-full  bg-primery text-white \"\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"w-8 h-8 mx-2\"\r\n              viewBox=\"0 0 24 24\"\r\n              fill=\"white\"\r\n            >\r\n              <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n              <path d=\"M6.99 11L3 15l3.99 4v-3H14v-2H6.99v-3zM21 9l-3.99-4v3H10v2h7.01v3L21 9z\" />\r\n            </svg>\r\n          </button>\r\n          <label className=\" input-text\">\r\n            <span className=\"text-gray-700\">Konverzija u:</span>\r\n            <select\r\n              className=\"form-select mt-1 block w-full\"\r\n              value={konU}\r\n              onChange={(e) => {\r\n                const novoU = e.target.value;\r\n                if (novoU === konIz) {\r\n                  rotiraj();\r\n                } else {\r\n                  setKonU(novoU);\r\n                }\r\n              }}\r\n            >\r\n              <Opcije />\r\n            </select>\r\n          </label>\r\n        </div>\r\n        {/* Rzultat */}\r\n\r\n        <label className=\" input-text\">\r\n          <input\r\n            type=\"date\"\r\n            value={datum}\r\n            onChange={(e) => {\r\n              setDatum(e.target.value);\r\n            }}\r\n            className=\"form-input mt-1\"\r\n            placeholder=\"1.00\"\r\n          />\r\n        </label>\r\n\r\n        <div className=\"flex gap-4 flex-col-reverse sm:flex-row justify-between sm:items-end  \">\r\n          <div className=\"grid gap-1\">\r\n            <span className=\"text-lg\">\r\n              {kolicina} {KodUString[konIz][0]} = <br />\r\n            </span>\r\n            <span className=\" text-4xl text-primery font-semibold\">\r\n              {!rezultat && \"...\"} {rezultat} {KodUString[konU][1]}\r\n            </span>\r\n            <span className=\"text-gray-500\">\r\n              {vremeKonverzije != null && (\r\n                <>\r\n                  Vreme konverzije:{\" \"}\r\n                  {vremeKonverzije.toISOString().slice(11).slice(0, 5)}s{\" \"}\r\n                  {vremeKonverzije.toISOString().slice(11).slice(6, 8)}ms\r\n                </>\r\n              )}\r\n            </span>\r\n          </div>\r\n          <button className=\"btn\" onClick={pozoviServer}>\r\n            Izvrši konverzija\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"grid grid-cols-1 gap-8  \">\r\n        <div className=\"grid p-8 gap-8 bg-white border-primery border-2 rounded-xl\">\r\n          <h2>Trenurne kvote:</h2>\r\n          <TrenurneKvore />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import { Switch, Route } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nfunction App() {\n  return (\n    <div className=\"relative\">\n      <div className=\"bg-primery absolute h-96 w-screen top-0 left-0 right-0\"></div>\n\n      <Switch>\n        <Route path=\"/\">\n          <HomePage />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"./index.scss\";\n\nimport axios from \"axios\";\n\naxios.defaults.baseURL = \"https://barkod-incode-back.herokuapp.com/api\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}